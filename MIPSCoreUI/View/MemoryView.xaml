<UserControl x:Class="MIPSCoreUI.View.MemoryView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:vm="clr-namespace:MIPSCoreUI.ViewModel"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:converter="clr-namespace:MIPSCoreUI.Converter"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance d:Type=vm:MemoryViewModel, IsDesignTimeCreatable=False}"
             d:DesignHeight="300" d:DesignWidth="300"
             Loaded="Window_Loaded">
    <UserControl.Resources>
        <converter:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" TrueValue="Visible" FalseValue="Hidden" />
    </UserControl.Resources>
    <Grid  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,-28">
        <GroupBox Header="Memory" BorderThickness="2" BorderBrush="SlateGray" FontSize="13">
            <TabControl SelectedIndex="{Binding SelectedMemoryIndex}">
                <TabItem Header="Text" Height="24" VerticalAlignment="Bottom" >
                    <ListBox ItemsSource="{Binding Path=List, Mode=TwoWay}" SelectedItem="{Binding SelectedItem, Mode=TwoWay}" FontFamily="Courier New">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding AddBreakpoint}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">

                                    <Ellipse Margin="0,0,2,0" Fill="Red" Height="10" Width="10" Stroke="Red"  Visibility="{Binding BreakpointVisible, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                    <TextBlock Name="TextMemory" Text="{Binding Text}" Background="{Binding Background}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <Trigger Property ="IsMouseOver" Value="True">
                                                        <Setter Property= "Foreground" Value="Black"/>
                                                    </Trigger>
                                                    <Trigger Property ="IsMouseOver" Value="False">
                                                        <Setter Property= "Foreground" Value="Black"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </TabItem>
                <TabItem Header="Data" FontSize="13">
                    <ListBox ItemsSource="{Binding Path=DataList, Mode=TwoWay}" SelectedItem="{Binding SelectedItem, Mode=TwoWay}" FontFamily="Courier New">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Name="TextMemory" Text="{Binding Text}" Background="{Binding Background}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <Trigger Property ="IsMouseOver" Value="True">
                                                        <Setter Property= "Foreground" Value="Black"/>
                                                    </Trigger>
                                                    <Trigger Property ="IsMouseOver" Value="False">
                                                        <Setter Property= "Foreground" Value="Black"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                </TabItem>
            </TabControl>
        </GroupBox>
    </Grid>
</UserControl>
